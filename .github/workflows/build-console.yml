name: Build Console Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 0.9.0)'
        required: true
        default: '0.9.0'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
        
    - name: Restore console dependencies
      run: dotnet restore CricutStencilMaker.Console.csproj
      
    - name: Build console application
      run: dotnet build CricutStencilMaker.Console.csproj -c Release --no-restore
      
    - name: Publish Windows x64
      run: dotnet publish CricutStencilMaker.Console.csproj -c Release --self-contained true -r win-x64 -o "publish/win-x64"
      
    - name: Publish Windows ARM64
      run: dotnet publish CricutStencilMaker.Console.csproj -c Release --self-contained true -r win-arm64 -o "publish/win-arm64"
      
    - name: Create release packages
      run: |
        $version = "${{ github.event.inputs.version }}"
        
        # Create Windows x64 package
        Compress-Archive -Path "publish/win-x64/*" -DestinationPath "CricutStencilMaker-v$version-win-x64.zip"
        
        # Create Windows ARM64 package  
        Compress-Archive -Path "publish/win-arm64/*" -DestinationPath "CricutStencilMaker-v$version-win-arm64.zip"
        
        # Create simple batch launcher for ease of use
        $batchContent = @"
@echo off
echo Cricut Stencil Maker v$version
echo ================================
echo.
echo Usage examples:
echo   CricutStencilMaker.exe --input "my-image.png"
echo   CricutStencilMaker.exe --input "photo.jpg" --output "stencil.svg" --size 23in
echo.
pause
"@
        
        $batchContent | Out-File -FilePath "publish/win-x64/run-example.bat" -Encoding ASCII
        $batchContent | Out-File -FilePath "publish/win-arm64/run-example.bat" -Encoding ASCII
        
        Write-Host "âœ… Packages created successfully!" -ForegroundColor Green
        Get-ChildItem "CricutStencilMaker-v$version-*.zip" | Select-Object Name, Length
      shell: powershell
      
    - name: Upload Windows x64 package
      uses: actions/upload-artifact@v4
      with:
        name: CricutStencilMaker-v${{ github.event.inputs.version }}-win-x64
        path: CricutStencilMaker-v${{ github.event.inputs.version }}-win-x64.zip
        
    - name: Upload Windows ARM64 package
      uses: actions/upload-artifact@v4
      with:
        name: CricutStencilMaker-v${{ github.event.inputs.version }}-win-arm64
        path: CricutStencilMaker-v${{ github.event.inputs.version }}-win-arm64.zip
        
    - name: Show next steps
      run: |
        Write-Host "ðŸŽ‰ Console build completed successfully!" -ForegroundColor Green
        Write-Host ""
        Write-Host "ðŸ“¦ Downloads available:" -ForegroundColor Cyan
        Write-Host "   - Windows x64: CricutStencilMaker-v${{ github.event.inputs.version }}-win-x64.zip"
        Write-Host "   - Windows ARM64: CricutStencilMaker-v${{ github.event.inputs.version }}-win-arm64.zip"
        Write-Host ""
        Write-Host "ðŸš€ Usage:" -ForegroundColor Yellow
        Write-Host "   CricutStencilMaker.exe --input image.png --output stencil.svg"
        Write-Host ""
        Write-Host "ðŸ“‹ To create a release:" -ForegroundColor Cyan
        Write-Host "   1. Download the ZIP files from Artifacts"
        Write-Host "   2. Go to GitHub Releases â†’ Create new release"
        Write-Host "   3. Tag: v${{ github.event.inputs.version }}"
        Write-Host "   4. Upload both ZIP files"
        Write-Host "   5. Add release notes and publish"
      shell: powershell